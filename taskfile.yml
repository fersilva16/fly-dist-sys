version: '3'

tasks:
  test-all:
    desc: Run all tests
    cmds:
      - task: test-echo
      - task: test-uniqueids
      - task: test-broadcast
      - task: test-counter
      - task: test-kafka

  test-echo:
    desc: Run echo test
    cmds:
      - go test ./echo {{.CLI_ARGS}}

  test-uniqueids:
    desc: Run uniqueids test
    cmds:
      - go test ./uniqueids {{.CLI_ARGS}}

  test-broadcast:
    desc: Run broadcast test
    cmds:
      - task: test-broadcast-single-node
      - task: test-broadcast-multi-node
      - task: test-broadcast-fault-tolerant
      - task: test-broadcast-efficient-i
      - task: test-broadcast-efficient-ii

  test-broadcast-single-node:
    desc: Run broadcast single-node test
    cmds:
      - go test ./broadcast/a {{.CLI_ARGS}}

  test-broadcast-multi-node:
    desc: Run broadcast multi-node test
    cmds:
      - go test ./broadcast/b {{.CLI_ARGS}}

  test-broadcast-fault-tolerant:
    desc: Run broadcast fault-tolerant test
    cmds:
      - go test ./broadcast/c {{.CLI_ARGS}}

  test-broadcast-efficient-i:
    desc: Run broadcast efficient-i test
    cmds:
      - go test ./broadcast/d {{.CLI_ARGS}}

  test-broadcast-efficient-ii:
    desc: Run broadcast efficient-ii test
    cmds:
      - go test ./broadcast/e {{.CLI_ARGS}}

  test-counter:
    desc: Run counter test
    cmds:
      - task: test-counter-ot
      - task: test-counter-crdt

  test-counter-ot:
    desc: Run counter OT test
    cmds:
      - go test ./counter/ot {{.CLI_ARGS}}

  test-counter-crdt:
    desc: Run counter CRDT test
    cmds:
      - go test ./counter/crdt {{.CLI_ARGS}}

  test-kafka:
    desc: Run kafka test
    cmds:
      - task: test-kafka-single-node

  test-kafka-single-node:
    desc: Run kafka single-node test
    cmds:
      - go test ./kafka/a {{.CLI_ARGS}}

  test-kafka-multi-node:
    desc: Run kafka multi-node test
    cmds:
      - go test ./kafka/b {{.CLI_ARGS}}

  run-all:
    desc: Run all
    cmds:
      - task: run-echo
      - task: run-uniqueids
      - task: run-broadcast
      - task: run-counter
      - task: run-kafka

  run-echo:
    desc: Run echo test
    cmds:
      - task: build-echo
      - maelstrom test -w echo --bin ./build/echo --node-count 1 --time-limit 10

  run-uniqueids:
    desc: Run uniqueids test
    cmds:
      - task: build-uniqueids
      - maelstrom test -w unique-ids --bin ./build/uniqueids --time-limit 30 --rate 1000 --node-count 3 --availability total --nemesis partition

  run-broadcast:
    desc: Run broadcast test
    cmds:
      - task: run-broadcast-single-node
      - task: run-broadcast-multi-node
      - task: run-broadcast-fault-tolerant
      - task: run-broadcast-efficient-i
      - task: run-broadcast-efficient-ii

  run-broadcast-single-node:
    desc: Run broadcast single-node test
    cmds:
      - task: build-broadcast-single-node
      - maelstrom test -w broadcast --bin ./build/broadcast/a --node-count 1 --time-limit 20 --rate 10

  run-broadcast-multi-node:
    desc: Run broadcast multi-node test
    cmds:
      - task: build-broadcast-multi-node
      - maelstrom test -w broadcast --bin ./build/broadcast/b --node-count 5 --time-limit 20 --rate 10

  run-broadcast-fault-tolerant:
    desc: Run broadcast fault-tolerant test
    cmds:
      - task: build-broadcast-fault-tolerant
      - maelstrom test -w broadcast --bin ./build/broadcast/c --node-count 5 --time-limit 20 --rate 10 --nemesis partition

  run-broadcast-efficient-i:
    desc: Run broadcast efficient-i test
    cmds:
      - task: run-broadcast-efficient-i1
      - task: run-broadcast-efficient-i2

  run-broadcast-efficient-i1:
    desc: Run broadcast efficient-i1 test
    cmds:
      - task: build-broadcast-efficient-i
      - maelstrom test -w broadcast --bin ./build/broadcast/d --node-count 25 --time-limit 20 --rate 100 --latency 100
      - ./scripts/broadcast-check.sh 30 400 600

  run-broadcast-efficient-i2:
    desc: Run broadcast efficient-i2 test
    cmds:
      - task: build-broadcast-efficient-i
      - maelstrom test -w broadcast --bin ./build/broadcast/d --node-count 25 --time-limit 20 --rate 100 --latency 100 --nemesis partition

  run-broadcast-efficient-ii:
    desc: Run broadcast efficient-ii test
    cmds:
      - task: run-broadcast-efficient-ii1
      - task: run-broadcast-efficient-ii2

  run-broadcast-efficient-ii1:
    desc: Run broadcast efficient-ii1 test
    cmds:
      - task: build-broadcast-efficient-ii
      - maelstrom test -w broadcast --bin ./build/broadcast/e --node-count 25 --time-limit 20 --rate 100 --latency 100
      - ./scripts/broadcast-check.sh 20 1000 2000

  run-broadcast-efficient-ii2:
    desc: Run broadcast efficient-ii2 test
    cmds:
      - task: build-broadcast-efficient-ii
      - maelstrom test -w broadcast --bin ./build/broadcast/e --node-count 25 --time-limit 20 --rate 100 --latency 100 --nemesis partition

  run-counter:
    desc: Run counter test
    cmds:
      - task: run-counter-ot
      - task: run-counter-crdt

  run-counter-ot:
    desc: Run counter test over OT solution
    cmds:
      - task: build-counter-ot
      - maelstrom test -w g-counter --bin ./build/counter/ot --node-count 3 --rate 100 --time-limit 20 --nemesis partition

  run-counter-crdt:
    desc: Run counter test over CRDT solution
    cmds:
      - task: build-counter-crdt
      - maelstrom test -w g-counter --bin ./build/counter/crdt --node-count 3 --rate 100 --time-limit 20 --nemesis partition

  run-kafka:
    desc: Run kafka test
    cmds:
      - task: run-kafka-single-node

  run-kafka-single-node:
    desc: Run kafka single-node test
    cmds:
      - task: build-kafka-single-node
      - maelstrom test -w kafka --bin ./build/kafka/a --node-count 1 --concurrency 2n --time-limit 20 --rate 1000

  run-kafka-multi-node:
    desc: Run kafka multi-node test
    cmds:
      - task: build-kafka-multi-node
      - maelstrom test -w kafka --bin ./build/kafka/b --node-count 2 --concurrency 2n --time-limit 20 --rate 1000

  build-all:
    desc: Build all
    cmds:
      - task: build-echo
      - task: build-uniqueids
      - task: build-broadcast
      - task: build-counter
      - task: build-kafka

  build-echo:
    desc: Build echo
    sources:
      - echo/**/*
    generates:
      - build/echo
    cmds:
      - go build -o ./build/echo ./echo

  build-uniqueids:
    desc: Build uniqueids
    sources:
      - uniqueids/**/*
    generates:
      - build/uniqueids
    cmds:
      - go build -o ./build/uniqueids ./uniqueids

  build-broadcast:
    desc: Build broadcast
    cmds:
      - task: build-broadcast-single-node
      - task: build-broadcast-multi-node
      - task: build-broadcast-fault-tolerant
      - task: build-broadcast-efficient-i
      - task: build-broadcast-efficient-ii

  build-broadcast-single-node:
    desc: Build broadcast single-node
    sources:
      - broadcast/a/**/*
    generates:
      - build/broadcast/a
    cmds:
      - go build -o ./build/broadcast/a ./broadcast/a

  build-broadcast-multi-node:
    desc: Build broadcast multi-node
    sources:
      - broadcast/b/**/*
    generates:
      - build/broadcast/b
    cmds:
      - go build -o ./build/broadcast/b ./broadcast/b

  build-broadcast-fault-tolerant:
    desc: Build broadcast fault-tolerant
    sources:
      - broadcast/c/**/*
    generates:
      - build/broadcast/c
    cmds:
      - go build -o ./build/broadcast/c ./broadcast/c

  build-broadcast-efficient-i:
    desc: Build broadcast efficient-i
    sources:
      - broadcast/d/**/*
    generates:
      - build/broadcast/d
    cmds:
      - go build -o ./build/broadcast/d ./broadcast/d

  build-broadcast-efficient-ii:
    desc: Build broadcast efficient-ii
    sources:
      - broadcast/e/**/*
    generates:
      - build/broadcast/e
    cmds:
      - go build -o ./build/broadcast/e ./broadcast/e

  build-counter:
    desc: Build counter
    cmds:
      - task: build-counter-ot
      - task: build-counter-crdt

  build-counter-ot:
    desc: Build counter OT
    sources:
      - counter/ot/**/*
    generates:
      - build/counter/ot
    cmds:
      - go build -o ./build/counter/ot ./counter/ot

  build-counter-crdt:
    desc: Build counter CRDT
    sources:
      - counter/crdt/**/*
    generates:
      - build/counter/crdt
    cmds:
      - go build -o ./build/counter/crdt ./counter/crdt

  build-kafka:
    desc: Build kafka
    cmds:
      - task: build-kafka-single-node

  build-kafka-single-node:
    desc: Build kafka single-node
    sources:
      - kafka/a/**/*
    generates:
      - build/kafka/a
    cmds:
      - go build -o ./build/kafka/a ./kafka/a

  build-kafka-multi-node:
    desc: Build kafka multi-node
    sources:
      - kafka/b/**/*
    generates:
      - build/kafka/b
    cmds:
      - go build -o ./build/kafka/b ./kafka/b
